// Function to move a row's priority up
  const handleMoveUp = (key) => {
    setDataSource((prevData) => {
      return prevData.map(item => {
        const targetRow = prevData.find(row => row.key === key);
        if (item.priority === targetRow.priority - 1) {
          // Swap priority with the row above
          return { ...item, priority: item.priority + 1 };
        }
        if (item.key === key) {
          return { ...item, priority: item.priority - 1 };
        }
        return item;
      })
      .sort((a, b) => a.priority - b.priority); // Sort rows by ascending priority
    });
  };

  // Function to move a row's priority down
  const handleMoveDown = (key) => {
    setDataSource((prevData) => {
      return prevData.map(item => {
        const targetRow = prevData.find(row => row.key === key);
        if (item.priority === targetRow.priority + 1) {
          // Swap priority with the row below
          return { ...item, priority: item.priority - 1 };
        }
        if (item.key === key) {
          return { ...item, priority: item.priority + 1 };
        }
        return item;
      })
      .sort((a, b) => a.priority - b.priority); // Sort rows by ascending priority
    });
  };
