const dates = ['20 Mar','25 Mar','23 Mar'];

// Custom sorting function to sort dates
const customSort = (a, b) => {
    // Extract day and month from the date string
    const [dayA, monthA] = a.split(' ');
    const [dayB, monthB] = b.split(' ');

    // Convert month names to numbers for comparison
    const monthToNumber = {
        'Jan': 1, 'Feb': 2, 'Mar': 3, 'Apr': 4, 'May': 5, 'Jun': 6,
        'Jul': 7, 'Aug': 8, 'Sep': 9, 'Oct': 10, 'Nov': 11, 'Dec': 12
    };

    // Compare months first
    if (monthToNumber[monthA] !== monthToNumber[monthB]) {
        return monthToNumber[monthA] - monthToNumber[monthB];
    }
    // If months are the same, compare days
    return parseInt(dayA) - parseInt(dayB);
};

// Sort the dates array using the custom sorting function
dates.sort(customSort);

console.log(dates); // Output: ['20 Mar','23 Mar','25 Mar']


























<mdb-accordion [flush]="true">
  <mdb-accordion-item>
    <ng-template mdbAccordionItemHeader>Accordion Item #1</ng-template>
    <ng-template mdbAccordionItemBody>



Q1
const regex = /^[a-zA-Z0-9_]*$/;
Use concise character class syntax '\w' instead of '[a-zA-Z0-9_]'.

Ans
const regex = /^\w*$/;

Q2
Use concise character class syntax '\w' instead of '[a-zA-Z0-9_]'.

Ans

const regex = /^\w*$/;

<div class="row mt-3" *ngFor="let item of responseCodeList; let i = index">
                <div class="col-md-3">
                  <ng-select [class.input-valid]="!item.ipc && error" bindLabel="value" appendTo="body" [clearable]="false" bindValue="value"
                    [items]="internalCodeList" [(ngModel)]="item.ipc" [disabled]="readOnlyFlag"
                    placeholder="Select Internal code">
                  </ng-select>
                  <span class="error" *ngIf="!item.ipc && error">Please select internal code</span>
                </div>
                <div class="col-md-2">
                  <input [class.not-valid]="!item.responseCode && error" class="form-control" [(ngModel)]="item.responseCode" type="text" [disabled]="readOnlyFlag"
                    (keydown)="validateResCode($event)" placeholder="Enter Value" />
                    <span class="error" *ngIf="!item.responseCode && error">Please enter response code</span>
                </div>
                <div class="col-md-3">
                  <input class="form-control" [(ngModel)]="item.description" type="text" [disabled]="readOnlyFlag"
                    placeholder="Enter Value" (keydown)="validateResCode($event)" />                   
                </div>
                <div class="col-md-2">
                  <input class="form-control" [(ngModel)]="item.statusCode" type="text" [disabled]="readOnlyFlag"
                    placeholder="Enter Value" (keydown)="validateResCode($event)" />
                </div>
                <div class="col-md-2">
                  <span *ngIf="this.responseCodeList.length > 1 && !readOnlyFlag" class="btn btn-default"
                    (click)="pullresponseCodeItem(i)"><i class="fa fa-minus"></i></span>
                </div>
              </div>











 <form [formGroup]="specificationResponseForm">
                <div formGroupName="phaseExecutions">
                  <div formArrayName="PRE">
                    <div
                      class="row mt-3"
                      *ngFor="let item of phaseArray.controls; let i = index"
                      [formGroupName]="i"
                    >
                      <div class="col-md-3">
                        <ng-select
                          bindLabel="value"
                          appendTo="body"
                          [clearable]="false"
                          bindValue="value"
                          [items]="internalCodeList"
                          formControlName="ipc"
                          [disabled]="readOnlyFlag"
                          placeholder="Select Internal code"
                        >
                        </ng-select>
                        <span class="error" *ngIf="error">Please select internal code</span>
                      </div>
                      <div class="col-md-2">
                        <input
                          [class.not-valid]="error"
                          class="form-control"
                          formControlName="responseCode"
                          type="text"
                          [disabled]="readOnlyFlag"
                          (keydown)="validateResCode($event)"
                          placeholder="Enter Value"
                        />
                        <span class="error" *ngIf="error">Please enter response code</span>
                      </div>
                      <div class="col-md-3">
                        <input
                          class="form-control"
                          formControlName="description"
                          type="text"
                          [disabled]="readOnlyFlag"
                          placeholder="Enter Value"
                          (keydown)="validateResCode($event)"
                        />
                      </div>
                      <div class="col-md-2">
                        <input
                          class="form-control"
                          formControlName="statusCode"
                          type="text"
                          [disabled]="readOnlyFlag"
                          placeholder="Enter Value"
                          (keydown)="validateResCode($event)"
                        />
                      </div>
                      <div class="col-md-2">
                        <span
                          *ngIf="this.phaseArray.length > 1 && !readOnlyFlag"
                          class="btn btn-default"
                          (click)="pullresponseCodeItem(i)"
                          ><i class="fa fa-minus"></i
                        ></span>
                      </div>
                    </div>
                  </div>
                </div>
              </form>





<form #myForm="ngForm" (ngSubmit)="onSubmit()">
  <div *ngFor="let item of items; let i = index" class="form-group">
    <label for="item{{i}}">Item {{i + 1}}</label>
    <input type="text" class="form-control" id="item{{i}}" name="item{{i}}" [(ngModel)]="items[i]" required>
    <div *ngIf="myForm.controls['item' + i].invalid && myForm.controls['item' + i].touched" class="text-danger">
      Item is required.
    </div>
  </div>

  <button type="submit" class="btn btn-primary">Submit</button>
</form>
