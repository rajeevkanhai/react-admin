import React, { useState, useEffect, useCallback } from 'react';
import AsyncPaginate from 'react-select-async-paginate';
import axios from 'axios';

const MyComponent = () => {
  // State to hold form data
  const [formData, setFormData] = useState({
    selectedOption: null,
    fieldOne: '',
    fieldTwo: '',
  });

  // State to hold options for react-select
  const [options, setOptions] = useState([]);

  // Fetch options from API
  const loadOptions = async (search, loadedOptions, { page }) => {
    const response = await axios.get('https://api.example.com/items', {
      params: {
        q: search,
        page,
      },
    });

    const newOptions = response.data.items.map(item => ({
      label: item.name,
      value: item.id,
    }));

    setOptions([...loadedOptions, ...newOptions]);

    return {
      options: newOptions,
      hasMore: response.data.hasMore,
      additional: {
        page: page + 1,
      },
    };
  };

  // Handle form submit
  const handleSubmit = async (event) => {
    event.preventDefault();

    const { selectedOption, fieldOne, fieldTwo } = formData;

    const data = {
      selectedOption: selectedOption.value,
      fieldOne,
      fieldTwo,
    };

    try {
      await axios.post('https://api.example.com/submit', data);
      alert('Data submitted successfully');
    } catch (error) {
      console.error('Error submitting data', error);
    }
  };

  // Handle input change
  const handleChange = (name, value) => {
    setFormData(prevState => ({
      ...prevState,
      [name]: value,
    }));
  };

  return (
    <div>
      <h1>CRUD Form with Async Paginate Select</h1>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Select Option:</label>
          <AsyncPaginate
            value={formData.selectedOption}
            loadOptions={loadOptions}
            onChange={option => handleChange('selectedOption', option)}
            additional={{
              page: 1,
            }}
          />
        </div>
        <div>
          <label>Field One:</label>
          <input
            type="text"
            value={formData.fieldOne}
            onChange={e => handleChange('fieldOne', e.target.value)}
          />
        </div>
        <div>
          <label>Field Two:</label>
          <input
            type="text"
            value={formData.fieldTwo}
            onChange={e => handleChange('fieldTwo', e.target.value)}
          />
        </div>
        <button type="submit">Submit</button>
      </form>
    </div>
  );
};

export default MyComponent;
