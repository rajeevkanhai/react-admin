import React, { useState } from 'react';
import { Table, Button } from 'antd';

const App = () => {
  // Initialize table data with a 'priority' field
  const [dataSource, setDataSource] = useState([
    { key: '1', name: 'John Brown', age: 32, priority: 0 },
    { key: '2', name: 'Jim Green', age: 42, priority: 0 },
    { key: '3', name: 'Joe Black', age: 29, priority: 0 },
  ]);

  // Function to include/exclude a row based on priority
  const handleIncludeExclude = (key, include) => {
    setDataSource((prevData) => {
      // Find the maximum priority currently in the data
      let maxPriority = Math.max(...prevData.map(item => item.priority));

      return prevData
        .map((item) => {
          if (item.key === key) {
            // If we are including, assign the next highest priority (maxPriority + 1)
            if (include) {
              return { ...item, priority: maxPriority + 1 };
            } else {
              // If excluding, reset priority to 0
              return { ...item, priority: 0 };
            }
          }
          return item;
        })
        // Sort data by priority in descending order
        .sort((a, b) => b.priority - a.priority);
    });
  };

  // Define table columns
  const columns = [
    {
      title: 'Name',
      dataIndex: 'name',
      key: 'name',
    },
    {
      title: 'Age',
      dataIndex: 'age',
      key: 'age',
    },
    {
      title: 'Priority',
      dataIndex: 'priority',
      key: 'priority',
    },
    {
      title: 'Action',
      key: 'action',
      render: (_, record) => (
        <span>
          <Button
            onClick={() => handleIncludeExclude(record.key, true)}
            disabled={record.priority > 0}
          >
            Include
          </Button>
          <Button
            onClick={() => handleIncludeExclude(record.key, false)}
            style={{ marginLeft: 8 }}
            disabled={record.priority === 0}
          >
            Exclude
          </Button>
        </span>
      ),
    },
  ];

  return (
    <Table
      dataSource={dataSource}
      columns={columns}
      rowKey="key"
      pagination={false} // Optional: to show all rows without pagination
    />
  );
};

export default App;
