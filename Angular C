import React, { useState } from 'react'; import { Table, Button } from 'antd'; const App = () => { // Initialize table data with a 'priority' field const [dataSource, setDataSource] = useState([ { key: '1', name: 'John Brown', age: 32, priority: 1 }, { key: '2', name: 'Jim Green', age: 42, priority: 2 }, { key: '3', name: 'Joe Black', age: 29, priority: 3 }, ]); // Function to include/exclude a row based on priority const handleIncludeExclude = (key, include) => { setDataSource((prevData) => { // Find the current row being included/excluded const targetRow = prevData.find(row => row.key === key); if (include) { // Find the maximum priority in the current data let maxPriority = Math.max(...prevData.map(item => item.priority)); // Set the priority of the selected row to maxPriority + 1 return prevData .map(item => item.key === key ? { ...item, priority: maxPriority + 1 } : item) .sort((a, b) => a.priority - b.priority); // Sort rows by ascending priority } else { // On excluding, we decrease the priority of all rows with a higher priority than the excluded row const excludedPriority = targetRow.priority; return prevData .map(item => { if (item.key === key) { // Set the priority of the excluded row to 0 return { ...item, priority: 0 }; } else if (item.priority > excludedPriority) { // Decrease priority of rows that had higher priority return { ...item, priority: item.priority - 1 }; } return item; }) .sort((a, b) => a.priority - b.priority); // Sort rows by ascending priority } }); }; // Define table columns const columns = [ { title: 'Name', dataIndex: 'name', key: 'name', }, { title: 'Age', dataIndex: 'age', key: 'age', }, { title: 'Priority', dataIndex: 'priority', key: 'priority', }, { title: 'Action', key: 'action', render: (_, record) => ( <span> <Button onClick={() => handleIncludeExclude(record.key, true)} disabled={record.priority > 0} > Include </Button> <Button onClick={() => handleIncludeExclude(record.key, false)} style={{ marginLeft: 8 }} disabled={record.priority === 0} > Exclude </Button> </span> ), }, ]; return ( <Table dataSource={dataSource} columns={columns} rowKey="key" pagination={false} // Optional: to show all rows without pagination /> ); }; export default App;
