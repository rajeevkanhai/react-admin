import { ComponentFixture, TestBed } from '@angular/core/testing';
import { Component, DebugElement } from '@angular/core';
import { By } from '@angular/platform-browser';
import { NumbersOnlyDirective } from './numbers-only.directive';

@Component({
  template: `
    <input type="text" appNumbersOnly [(ngModel)]="inputValue" />
  `
})
class TestComponent {
  inputValue: string = '';
}

describe('NumbersOnlyDirective', () => {
  let fixture: ComponentFixture<TestComponent>;
  let component: TestComponent;
  let inputEl: DebugElement;

  beforeEach(() => {
    TestBed.configureTestingModule({
      declarations: [NumbersOnlyDirective, TestComponent],
    });

    fixture = TestBed.createComponent(TestComponent);
    component = fixture.componentInstance;
    inputEl = fixture.debugElement.query(By.directive(NumbersOnlyDirective));
  });

  it('should create the component', () => {
    expect(component).toBeTruthy();
  });

  it('should allow numeric input', () => {
    const input = inputEl.nativeElement;

    // Simulate keydown events with numeric keys
    '1234567890'.split('').forEach((key) => {
      input.value += key;
      input.dispatchEvent(new KeyboardEvent('keydown', { key }));
      fixture.detectChanges();
    });

    // Expect the input value to contain only numeric characters
    expect(input.value).toBe('1234567890');
  });

  it('should allow special keys like Backspace and Tab', () => {
    const input = inputEl.nativeElement;

    // Simulate keydown events with special keys
    ['Backspace', 'Tab'].forEach((key) => {
      input.dispatchEvent(new KeyboardEvent('keydown', { key }));
      fixture.detectChanges();
    });

    // Expect the input value to remain unchanged
    expect(input.value).toBe('');
  });

  it('should prevent non-numeric input', () => {
    const input = inputEl.nativeElement;

    // Simulate keydown events with non-numeric keys
    'abcxyz!@#$%^&*()_+'.split('').forEach((key) => {
      input.value += key;
      input.dispatchEvent(new KeyboardEvent('keydown', { key }));
      fixture.detectChanges();
    });

    // Expect the input value to contain only numeric characters
    expect(input.value).toBe('');
  });
});
